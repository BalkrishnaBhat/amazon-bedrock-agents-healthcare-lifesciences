AWSTemplateFormatVersion: '2010-09-09'
Description: Creates an Amazon Bedrock Agent for clinical trial protocol generation
  and optimization based on best practices and common data models.
Parameters:
  AgentAliasName:
    Type: String
    Default: LATEST
  BedrockModelId:
    Type: String
    Description: The ID of the Foundation Model to use for the Agent
    Default: anthropic.claude-3-5-sonnet-20240620-v1:0
  AgentIAMRoleArn:
    Type: String
    Description: The ARN for the agent IAM role
  LayersBucketName:
    Type: String
    Description: S3 bucket name for storing Lambda layers
Conditions:
  CreateAgentAliasCondition:
    Fn::Not:
    - Fn::Equals:
      - Ref: AgentAliasName
      - ''
Resources:
  ClinicalDataModelLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  ClinicalDataModelLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: clinical-data-model
      Handler: index.lambda_handler
      Role:
        Fn::GetAtt:
        - ClinicalDataModelLambdaRole
        - Arn
      Runtime: python3.12
      Timeout: 30
      MemorySize: 256
      Code:
        S3Bucket: shamika-test-12345
        S3Key: 379886b5cc046eb4a3b91a6205cac8b0
      PackageType: Zip
      Environment:
        Variables:
          ACTION_GROUP: clinical-data-model-action-group
          LOG_LEVEL: DEBUG
  ClinicalDataModelLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
        - ClinicalDataModelLambda
        - Arn
      Principal: bedrock.amazonaws.com
      SourceAccount:
        Ref: AWS::AccountId
      SourceArn:
        Fn::Sub: arn:aws:bedrock:${AWS::Region}:${AWS::AccountId}:agent-alias/*
  Guardrail:
    Type: AWS::Bedrock::Guardrail
    Properties:
      BlockedInputMessaging: Sorry, your query violates our usage policies.
      BlockedOutputsMessaging: Sorry, I am unable to reply because the output violates
        our usage policies.
      ContentPolicyConfig:
        FiltersConfig:
        - InputStrength: HIGH
          OutputStrength: HIGH
          Type: MISCONDUCT
        - InputStrength: HIGH
          OutputStrength: NONE
          Type: PROMPT_ATTACK
      Description: Guardrail to block profane words and other harmful content.
      Name: ClinicalTrialProtocolGuardrail
      WordPolicyConfig:
        ManagedWordListsConfig:
        - Type: PROFANITY
  Agent:
    Type: AWS::Bedrock::Agent
    Properties:
      ActionGroups:
      - ActionGroupName: UserInputAction
        ParentActionGroupSignature: AMAZON.UserInput
        ActionGroupState: ENABLED
      - ActionGroupName: clinical-data-model-action-group
        Description: Access clinical trial protocol templates based on common data
          models
        ActionGroupExecutor:
          Lambda:
            Fn::GetAtt:
            - ClinicalDataModelLambda
            - Arn
        ActionGroupState: ENABLED
        FunctionSchema:
          Functions:
          - Name: getClinicalProtocolTemplate
            Description: "Retrieves clinical trial protocol templates based on the\
              \ common data model (CDM).\n"
            Parameters: {}
      AgentName: clinical-trial-protocol-generator-agent
      AgentResourceRoleArn:
        Ref: AgentIAMRoleArn
      AutoPrepare: true
      Description: Agent that helps users create, review, and optimize clinical trial
        protocols based on best practices and common data models
      FoundationModel:
        Ref: BedrockModelId
      GuardrailConfiguration:
        GuardrailIdentifier:
          Fn::GetAtt:
          - Guardrail
          - GuardrailId
        GuardrailVersion:
          Fn::GetAtt:
          - Guardrail
          - Version
      Instruction: "You are a Clinical Trial Protocol Generator Agent that helps users\
        \ create, review, and optimize clinical trial protocols based on best practices,\
        \ common data models (CDM), regulatory guidelines, and similar studies. \n\
        You assist with protocol design, inclusion/exclusion criteria development,\
        \ endpoint selection, and statistical considerations.\n\nYou accept both structured\
        \ inputs (e.g., study phase, condition, intervention) and natural language\
        \ queries (e.g., \"Create a Phase 2 protocol for testing a new GLP-1 agonist\
        \ in type 2 diabetes\") \nand convert them into appropriate protocol templates\
        \ or recommendations.\n\nWhen helping users with clinical trial protocols,\
        \ follow these steps:\n\n1. Understand the user's specific needs (protocol\
        \ creation, review, optimization)\n2. Identify the appropriate parameters\
        \ (study phase, type, condition, intervention, etc.)\n3. Execute the appropriate\
        \ function with these parameters\n4. Present results in a clear, organized\
        \ manner\n5. Offer additional recommendations for protocol improvement\n6.\
        \ Suggest related statistical considerations when relevant\n\nAlways prioritize\
        \ scientific rigor, regulatory compliance, and patient safety in your recommendations.\
        \ Be prepared to explain the rationale behind protocol elements and suggest\
        \ alternatives when appropriate.\n\nEnsure that all protocol elements adhere\
        \ to common data model standards to facilitate interoperability and data sharing\
        \ across clinical research systems.\n"
  AgentAliasResource:
    Type: AWS::Bedrock::AgentAlias
    Condition: CreateAgentAliasCondition
    Properties:
      AgentId:
        Fn::GetAtt:
        - Agent
        - AgentId
      AgentAliasName:
        Ref: AgentAliasName
Outputs:
  AgentId:
    Description: Agent ID
    Value:
      Ref: Agent
  AgentAliasId:
    Description: Agent Alias ID
    Value:
      Fn::GetAtt:
      - AgentAliasResource
      - AgentAliasId
    Condition: CreateAgentAliasCondition
  ClinicalDataModelLambdaArn:
    Description: ARN of the Clinical Data Model Lambda function
    Value:
      Fn::GetAtt:
      - ClinicalDataModelLambda
      - Arn
